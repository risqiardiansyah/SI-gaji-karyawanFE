{"version":3,"sources":["app/MatxLayout/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/MatxLayout/SharedCompoents/Footer.jsx","app/MatxLayout/SharedCompoents/ShoppingCart.jsx","app/MatxLayout/SharedCompoents/NotificationBar.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarToggle.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/BadgeSelected.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/customizerOptions.js","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout1Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout2Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/MatxCustomizer.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarContent.jsx","app/MatxLayout/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebar.jsx","app/MatxLayout/SharedCompoents/Brand.jsx","app/MatxLayout/SharedCompoents/Sidenav.jsx","app/MatxLayout/Layout1/Layout1Sidenav.jsx"],"names":["SidenavTheme","children","theme","useTheme","settings","useSelector","state","layout","sidenavTheme","themes","layout1Settings","leftSidebar","useStyles","makeStyles","palette","footer","minHeight","display","width","padding","flexDirection","margin","appbar","zIndex","Footer","classes","footerTheme","color","position","className","clsx","href","miniCart","height","transition","background","cartListLoaded","ShoppingCart","container","useState","panelOpen","setPanelOpen","dispatch","useDispatch","user","cartList","ecommerce","handleDrawerToggle","getCartList","userId","parentThemePalette","activeTheme","onClick","style","type","text","secondary","primary","badgeContent","length","variant","anchor","open","onClose","ModalProps","keepMounted","map","product","key","id","size","updateCartAmount","amount","disabled","src","imgUrl","alt","title","price","deleteProductFromCart","fontSize","notification","notificationCard","cursor","right","marginTop","top","borderRadius","opacity","NotificationBar","React","notifcationList","notifications","getNotification","deleteNotification","to","path","elevation","icon","name","heading","getTimeDifference","Date","timestamp","subtitle","deleteAllNotification","toggle","bottom","SecondarySidebarToggle","isMobile","useMediaQuery","setLayoutSettings","merge","secondarySidebar","useEffect","IconButton","aria-label","Icon","Fab","BadgeSelected","withStyles","badge","Badge","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleChange","handleControlChange","i","Tooltip","placement","backgroundColor","themeColors","main","topbar","FormControl","component","FormLabel","RadioGroup","value","mode","onChange","FormControlLabel","control","Radio","label","Grid","spacing","bg","item","xs","invisible","bgImgURL","Paper","FormGroup","Switch","checked","get","Layout2Customizer","Object","keys","layout2Settings","navbar","dark","fontWeight","transform","marginBottom","letterSpacing","contrastText","helpText","maxCustomizer","customizerCloseButton","layoutBox","justifyContent","alignItems","demoLayouts","thumbnail","isPro","options","activeLayout","bgOpacity","fixed","MatxCustomizer","props","setOpen","tabIndex","setTabIndex","updateSettings","newSettings","updatedSettings","setDefaultSettings","set","event","controlValue","target","tooglePanel","handleTabChange","index","ThemeProvider","Button","suppressScrollX","Card","Link","root","boxShadow","shadows","marginRight","SecondarySidebarContent","SecondarySidenavTheme","SecondarySidebar","secondarySidebarTheme","brand","hideOnCompact","Brand","sidenavHoverShow","scrollable","paddingLeft","paddingRight","sidenavMobileOverlay","left","breakpoints","up","Sidenav","role","includes","navigations","navigations_bd","sidebarSettings","activeLayoutSettingsName","activeLayoutSettings","updateSidebarMode","sidenav","primaryRGB","backgroundRepeat","backgroundPosition","backgroundSize","overflow","backgroundImage","maxWidth","userInfo","Layout1Sidenav","console","log","convertHexToRGB","getSidenavWidth"],"mappings":"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","file":"static/js/1.e9d6f565.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst SidenavTheme = ({ children }) => {\r\n  const theme = useTheme();\r\n  const { settings } = useSelector((state) => state.layout);\r\n  const sidenavTheme =\r\n    settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n\r\n  return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import { AppBar, Toolbar } from '@material-ui/core';\r\nimport { makeStyles, ThemeProvider, useTheme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n\tfooter: {\r\n\t\tminHeight: \"var(--topbar-height)\",\r\n\t\t[\"@media (max-width:499px)\"]: {\r\n\t\t\tdisplay: \"table\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\tminHeight: \"auto\",\r\n\t\t\tpadding: \"1rem 0\",\r\n\t\t\t\"& .container\": {\r\n\t\t\t\tflexDirection: \"column !important\",\r\n\t\t\t\t\"& a\": {\r\n\t\t\t\t\tmargin: \"0 0 16px !important\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tappbar: {\r\n\t\tzIndex: 96,\r\n\t},\r\n}));\r\n\r\nconst Footer = () => {\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst { settings } = useSelector(({ layout }) => layout);\r\n\r\n\tconst footerTheme = settings.themes[settings.footer.theme] || theme;\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={footerTheme}>\r\n\t\t\t<AppBar color=\"primary\" position=\"static\" className={classes.appbar}>\r\n\t\t\t\t<Toolbar className={clsx(\"flex items-center\", classes.footer)}>\r\n\t\t\t\t\t<div className=\"flex items-center container w-full\">\r\n\t\t\t\t\t\t<p className=\"m-0\">\r\n\t\t\t\t\t\t\tDeveloped by <a href=\"https://alan.co.id/\">Alan Creative</a>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { Icon, Badge, IconButton, Drawer } from \"@material-ui/core\";\r\nimport { ThemeProvider, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getCartList,\r\n  deleteProductFromCart,\r\n  updateCartAmount,\r\n} from \"app/redux/actions/EcommerceActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  miniCart: {\r\n    width: \"var(--sidenav-width)\",\r\n    \"& .cart__topbar\": {\r\n      height: \"var(--topbar-height)\",\r\n    },\r\n    \"& .mini-cart__item\": {\r\n      transition: \"background 300ms ease\",\r\n      \"&:hover\": {\r\n        background: \"rgba(0,0,0,0.01)\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nlet cartListLoaded = false;\r\n\r\nfunction ShoppingCart({ container }) {\r\n  const [panelOpen, setPanelOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const user = useSelector((state) => state.user);\r\n  const { cartList } = useSelector((state) => state.ecommerce);\r\n  const { settings } = useSelector((state) => state.layout);\r\n\r\n  if (!cartListLoaded) {\r\n    dispatch(getCartList(user.userId));\r\n    cartListLoaded = true;\r\n  }\r\n\r\n  function handleDrawerToggle() {\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary,\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n          <Icon>shopping_cart</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true,\r\n        }}\r\n      >\r\n        <div className={classes.miniCart}>\r\n          <div className=\"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\">\r\n            <Icon color=\"primary\">shopping_cart</Icon>\r\n            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\r\n          </div>\r\n\r\n          {cartList.map((product) => (\r\n            <div\r\n              key={product.id}\r\n              className=\"mini-cart__item flex items-center justify-between py-2 px-2\"\r\n            >\r\n              <div className=\"flex flex-column mr-2\">\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      updateCartAmount(\r\n                        user.userId,\r\n                        product.id,\r\n                        product.amount + 1\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\r\n                </IconButton>\r\n                <IconButton\r\n                  disabled={!(product.amount - 1)}\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      updateCartAmount(\r\n                        user.userId,\r\n                        product.id,\r\n                        product.amount - 1\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"mr-2\">\r\n                <img\r\n                  className=\"w-80\"\r\n                  src={product.imgUrl}\r\n                  alt={product.title}\r\n                />\r\n              </div>\r\n              <div className=\"mr-2 text-center\">\r\n                <h6 className=\"m-0 mb-1\">{product.title}</h6>\r\n                <small className=\"text-muted\">\r\n                  ${product.price} x {product.amount}\r\n                </small>\r\n              </div>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() =>\r\n                  dispatch(deleteProductFromCart(user.userId, product.id))\r\n                }\r\n              >\r\n                <Icon fontSize=\"small\">clear</Icon>\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Drawer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ShoppingCart;\r\n","import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  Card,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ThemeProvider, useTheme } from \"@material-ui/core/styles\";\r\nimport { getTimeDifference } from \"utils.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getNotification,\r\n  deleteAllNotification,\r\n  deleteNotification,\r\n} from \"../../redux/actions/NotificationActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  notification: {\r\n    width: \"var(--sidenav-width)\",\r\n    \"& .notification__topbar\": {\r\n      height: \"var(--topbar-height)\",\r\n    },\r\n  },\r\n  notificationCard: {\r\n    \"&:hover\": {\r\n      \"& .delete-button\": {\r\n        cursor: \"pointer\",\r\n        display: \"unset\",\r\n        right: 0,\r\n        marginTop: 6,\r\n        top: 0,\r\n        zIndex: 2,\r\n      },\r\n      \"& .card__topbar__time\": {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    \"& .delete-button\": {\r\n      display: \"none\",\r\n      position: \"absolute\",\r\n      right: 0,\r\n      marginTop: 9,\r\n    },\r\n    \"& .card__topbar__button\": {\r\n      borderRadius: 15,\r\n      opacity: 0.9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NotificationBar = ({ container }) => {\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const { settings } = useSelector((state) => state.layout);\r\n  const notifcationList = useSelector((state) => state.notifications);\r\n\r\n  const handleDrawerToggle = () => {\r\n    if (!panelOpen) {\r\n      dispatch(getNotification());\r\n    }\r\n    setPanelOpen(!panelOpen);\r\n  };\r\n\r\n  const handleDeleteNotification = (id) => {\r\n    dispatch(deleteNotification(id));\r\n  };\r\n\r\n  const handleClearNotification = () => {\r\n    dispatch(deleteAllNotification());\r\n  };\r\n\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary,\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={5}>\r\n          <Icon>notifications</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        width={\"100px\"}\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true,\r\n        }}\r\n      >\r\n        <div className={classes.notification}>\r\n          <div className=\"notification__topbar elevation-z6 flex items-center p-4 mb-4\">\r\n            <Icon color=\"primary\">notifications</Icon>\r\n            <h5 className=\"ml-2 my-0 font-medium\">Notifications</h5>\r\n          </div>\r\n\r\n          {notifcationList.map((notification) => (\r\n            <div\r\n              key={notification.id}\r\n              className={clsx(\"relative\", classes.notificationCard)}\r\n            >\r\n              <IconButton\r\n                size=\"small\"\r\n                className=\"delete-button bg-light-gray mr-6\"\r\n                onClick={() => handleDeleteNotification(notification.id)}\r\n              >\r\n                <Icon className=\"text-muted\" fontSize=\"small\">\r\n                  clear\r\n                </Icon>\r\n              </IconButton>\r\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\r\n                <Card className=\"mx-4 mb-6\" elevation={3}>\r\n                  <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"card__topbar__button flex items-center justify-between h-24 w-24 overflow-hidden\">\r\n                        <Icon\r\n                          className=\"card__topbar__icon\"\r\n                          fontSize=\"small\"\r\n                          color={notification.icon.color}\r\n                        >\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                      </div>\r\n                      <span className=\"ml-4 font-medium text-muted\">\r\n                        {notification.heading}\r\n                      </span>\r\n                    </div>\r\n                    <small className=\"card__topbar__time text-muted\">\r\n                      {getTimeDifference(new Date(notification.timestamp))} ago\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"px-4 pt-2 pb-4\">\r\n                    <p className=\"m-0\">{notification.title}</p>\r\n                    <small className=\"text-muted\">\r\n                      {notification.subtitle}\r\n                    </small>\r\n                  </div>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n          {!!notifcationList.length && (\r\n            <div className=\"text-center\">\r\n              <Button onClick={handleClearNotification}>\r\n                Clear Notifications\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Drawer>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default NotificationBar;\r\n","import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { setLayoutSettings } from 'app/redux/actions/LayoutActions';\r\nimport { Fab, IconButton, Icon, useMediaQuery } from '@material-ui/core';\r\nimport { merge } from 'lodash';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  toggle: {\r\n    position: 'fixed',\r\n    right: '-30px',\r\n    bottom: '20px',\r\n    zIndex: 9999,\r\n    transition: 'all 0.15s ease',\r\n    '&.open': {\r\n      right: '10px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SecondarySidebarToggle = () => {\r\n  const isMobile = useMediaQuery('(max-width:767px)');\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { settings } = useSelector(({ layout }) => layout);\r\n\r\n  const toggle = () => {\r\n    dispatch(\r\n      setLayoutSettings(\r\n        merge({}, settings, {\r\n          secondarySidebar: { open: !settings.secondarySidebar.open },\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setLayoutSettings(\r\n        merge({}, settings, {\r\n          secondarySidebar: { open: !isMobile },\r\n        })\r\n      )\r\n    );\r\n  }, [isMobile, setLayoutSettings]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.toggle]: true,\r\n        open: settings.secondarySidebar.open,\r\n      })}\r\n    >\r\n      {settings.secondarySidebar.open && (\r\n        <IconButton onClick={toggle} size='small' aria-label='toggle'>\r\n          <Icon>arrow_right</Icon>\r\n        </IconButton>\r\n      )}\r\n      {!settings.secondarySidebar.open && (\r\n        <Fab\r\n          variant='extended'\r\n          size='small'\r\n          color='primary'\r\n          aria-label='add'\r\n          className='pr-9'\r\n          onClick={toggle}\r\n        >\r\n          <Icon>arrow_left</Icon>\r\n        </Fab>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebarToggle;\r\n","import { Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst BadgeSelected = withStyles(theme => ({\r\n  badge: {\r\n    top: \"0\",\r\n    right: \"0\",\r\n    height: \"32px\",\r\n    width: \"32px\",\r\n    borderRadius: \"50%\"\r\n  }\r\n}))(Badge);\r\n\r\nexport default BadgeSelected;\r\n","\r\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const mainSidebarThemes = ['whitePurple', 'whiteBlue', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const topbarThemes = ['whitePurple', 'whiteBlue', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormGroup,\r\n  Icon,\r\n  Switch,\r\n  Grid,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { get } from \"lodash\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst sidebarBG = [\r\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\r\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\",\r\n];\r\n\r\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\r\n        <div className=\"flex flex-wrap m--2\">\r\n          {mainSidebarThemes\r\n            // .filter(c => themeColors[c].palette.type === \"dark\")\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main,\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.leftSidebar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"flex flex-wrap m--2\">\r\n          {topbarThemes.map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                onClick={() =>\r\n                  handleChange(\"layout1Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main,\r\n                }}\r\n              >\r\n                {settings.layout1Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Sidebar\"\r\n            name=\"leftSidebar\"\r\n            value={settings.layout1Settings.leftSidebar.mode}\r\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\r\n            <FormControlLabel\r\n              value=\"compact\"\r\n              control={<Radio />}\r\n              label=\"Compact\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted mb-8\">Sidebar background image</div>\r\n\r\n        <div>\r\n          <Grid container spacing={3}>\r\n            {sidebarBG.map((bg, i) => (\r\n              <Grid item xs={4} key={i}>\r\n                <BadgeSelected\r\n                  color=\"primary\"\r\n                  className=\"w-full h-full cursor-pointer\"\r\n                  badgeContent={<Icon>done</Icon>}\r\n                  invisible={\r\n                    settings.layout1Settings.leftSidebar.bgImgURL !== bg\r\n                  }\r\n                >\r\n                  <Paper\r\n                    onClick={() =>\r\n                      handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\r\n                    }\r\n                  >\r\n                    <img className=\"max-h-152 w-full block\" src={bg} alt=\"\" />\r\n                  </Paper>\r\n                </BadgeSelected>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted\">Sidebar background opacity</div>\r\n        <Slider\r\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\r\n          onChange={(event, value) =>\r\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\r\n          }\r\n          marks={true}\r\n          step={0.02}\r\n          max={1}\r\n          min={0.5}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"sidebar-bgOpacity\"\r\n        />\r\n      </div> */}\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Topbar</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\r\n                />\r\n              }\r\n              label=\"Show\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\r\n                />\r\n              }\r\n              label=\"Fixed\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout1Customizer;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  Icon,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n} from \"@material-ui/core\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\n\r\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"flex flex-wrap m--2\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main,\r\n                }}\r\n              >\r\n                {settings.layout2Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Navbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.navbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main,\r\n                }}\r\n              >\r\n                {settings.layout2Settings.navbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"layout-mode\"\r\n            name=\"layoutMode\"\r\n            value={settings.layout2Settings.mode}\r\n            onChange={handleControlChange(\"layout2Settings.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel\r\n              value=\"contained\"\r\n              control={<Radio />}\r\n              label=\"Contained\"\r\n            />\r\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout2Customizer;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings,\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Button,\r\n  FormGroup,\r\n  Tooltip,\r\n  Switch,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper,\r\n  Link,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { merge, get, set } from \"lodash\";\r\nimport Layout1Customizer from \"./Layout1Customizer\";\r\nimport Layout2Customizer from \"./Layout2Customizer\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  label: {\r\n    color: palette.secondary.main,\r\n    backgroundColor: palette.primary.dark,\r\n    fontWeight: 700,\r\n    transform: \"rotate(90deg)\",\r\n    marginBottom: \"2.5rem\",\r\n    padding: \".25rem .5rem\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n    letterSpacing: \"1.5px\",\r\n    fontSize: \"1rem\",\r\n    \"&:hover, &.open\": {\r\n      backgroundColor: palette.secondary.main,\r\n      color: palette.secondary.contrastText,\r\n    },\r\n  },\r\n  helpText: {\r\n    margin: \"0px .5rem 1rem\",\r\n  },\r\n  maxCustomizer: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 50,\r\n  },\r\n  customizerCloseButton: {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n  },\r\n  layoutBox: {\r\n    \"&:hover\": {\r\n      \"& .layout-name\": {\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        background: \"rgba(0,0,0,0.3)\",\r\n        zIndex: 12,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst MatxCustomizer = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { settings } = useSelector((state) => state.layout);\r\n\r\n  const updateSettings = (newSettings) => {\r\n    let updatedSettings = merge({}, settings, newSettings);\r\n    dispatch(setLayoutSettings(updatedSettings));\r\n    dispatch(setDefaultSettings(updatedSettings));\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    let updatedSettings = set(settings, name, value);\r\n\r\n    updateSettings(updatedSettings);\r\n  };\r\n\r\n  const handleControlChange = (name) => (event) => {\r\n    let controlValue =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    handleChange(name, controlValue);\r\n  };\r\n\r\n  const tooglePanel = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleTabChange = (index) => {\r\n    setTabIndex(index);\r\n  };\r\n\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n        <span\r\n          className={clsx({ [classes.label]: true, open })}\r\n          onClick={tooglePanel}\r\n        >\r\n          DEMOS\r\n        </span>\r\n      </Tooltip>\r\n\r\n      {open && (\r\n        <ThemeProvider theme={activeTheme}>\r\n          <div\r\n            className={clsx(\r\n              \"flex-column fixed w-320 pb-8 elevation-z12 h-full-screen bg-default\",\r\n              classes.maxCustomizer\r\n            )}\r\n          >\r\n            <div className=\"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\">\r\n              <Icon color=\"primary\">settings</Icon>\r\n              <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\r\n              <IconButton\r\n                onClick={tooglePanel}\r\n                className={classes.customizerCloseButton}\r\n              >\r\n                <Icon>close</Icon>\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"px-6 mb-4 flex\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color={tabIndex === 0 ? \"secondary\" : \"primary\"}\r\n                onClick={() => handleTabChange(0)}\r\n                className=\"mr-4\"\r\n              >\r\n                Demos\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color={tabIndex === 1 ? \"secondary\" : \"primary\"}\r\n                onClick={() => handleTabChange(1)}\r\n              >\r\n                Settings\r\n              </Button>\r\n            </div>\r\n\r\n            <Scrollbar options={{ suppressScrollX: true }} className=\"px-4\">\r\n              {tabIndex === 0 && (\r\n                <div className=\"mb-8 mx-2\">\r\n                  <div className=\"text-muted\">Layouts</div>\r\n\r\n                  <div className=\"flex-column\">\r\n                    {demoLayouts.map((layout) => (\r\n                      <BadgeSelected\r\n                        color=\"secondary\"\r\n                        className={clsx(\r\n                          \"w-full my-3 max-h-152 cursor-pointer\",\r\n                          classes.layoutBox\r\n                        )}\r\n                        badgeContent={\"Pro\"}\r\n                        invisible={!layout.isPro}\r\n                        key={layout.name}\r\n                      >\r\n                        <Card\r\n                          className=\"relative\"\r\n                          onClick={() => updateSettings(layout.options)}\r\n                          elevation={4}\r\n                        >\r\n                          <div className=\"layout-name hidden\">\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                              {layout.name}\r\n                            </Button>\r\n                          </div>\r\n\r\n                          <img\r\n                            className=\"w-full\"\r\n                            src={layout.thumbnail}\r\n                            alt={layout.name}\r\n                          />\r\n                        </Card>\r\n                      </BadgeSelected>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* END LAYOUT */}\r\n\r\n              {tabIndex === 1 && (\r\n                <div>\r\n                  <div className={classes.helpText}>\r\n                    Set different themes to body, topbar, sidebar, footer & etc.\r\n                    Check out the{\" \"}\r\n                    <Link\r\n                      href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Documentation\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"mb-4 mx-2\">\r\n                    <div className=\"text-muted mb-4\">Main theme</div>\r\n                    <div className=\"flex flex-wrap m--2\">\r\n                      {mainThemes.map((color, i) => (\r\n                        <Tooltip key={i} title={color} placement=\"top\">\r\n                          <div\r\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                            onClick={() =>\r\n                              updateSettings({ activeTheme: color })\r\n                            }\r\n                            style={{\r\n                              backgroundColor:\r\n                                themeColors[color].palette.primary.main,\r\n                            }}\r\n                          >\r\n                            {settings.activeTheme === color && (\r\n                              <Icon>done</Icon>\r\n                            )}\r\n                            <div\r\n                              className={settings.themes[color].palette.type}\r\n                            ></div>\r\n                          </div>\r\n                        </Tooltip>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {settings.activeLayout === \"layout1\" && (\r\n                    <Layout1Customizer\r\n                      settings={settings}\r\n                      handleChange={handleChange}\r\n                      handleControlChange={handleControlChange}\r\n                    />\r\n                  )}\r\n\r\n                  {settings.activeLayout === \"layout2\" && (\r\n                    <Layout2Customizer\r\n                      settings={settings}\r\n                      handleChange={handleChange}\r\n                      handleControlChange={handleControlChange}\r\n                    />\r\n                  )}\r\n\r\n                  <div className=\"mx-2 mb-6\">\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">Footer</FormLabel>\r\n                      <FormGroup>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Switch\r\n                              checked={get(settings.footer, \"show\")}\r\n                              onChange={handleControlChange(\"footer.show\")}\r\n                            />\r\n                          }\r\n                          label=\"Show\"\r\n                        />\r\n\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Switch\r\n                              checked={get(\r\n                                settings.layout1Settings.footer,\r\n                                \"fixed\"\r\n                              )}\r\n                              onChange={handleControlChange(\"footer.fixed\")}\r\n                            />\r\n                          }\r\n                          label=\"Fixed\"\r\n                        />\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </div>\r\n\r\n                  <div className=\"mx-2 mb-6\">\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">\r\n                        Secondary sidebar\r\n                      </FormLabel>\r\n                      <FormGroup>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Switch\r\n                              checked={get(settings.secondarySidebar, \"show\")}\r\n                              onChange={handleControlChange(\r\n                                \"secondarySidebar.show\"\r\n                              )}\r\n                            />\r\n                          }\r\n                          label=\"Show\"\r\n                        />\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  </div>\r\n\r\n                  <div className=\"mb-4 mx-2\">\r\n                    <div className=\"text-muted mb-4\">\r\n                      Secondary sidebar theme\r\n                    </div>\r\n                    <div className=\"flex flex-wrap m--2\">\r\n                      {topbarThemes.map((color, i) => (\r\n                        <Tooltip key={i} title={color} placement=\"top\">\r\n                          <div\r\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                            onClick={() =>\r\n                              handleChange(\"secondarySidebar.theme\", color)\r\n                            }\r\n                            style={{\r\n                              backgroundColor:\r\n                                themeColors[color].palette.primary.main,\r\n                            }}\r\n                          >\r\n                            {settings.secondarySidebar.theme === color && (\r\n                              <Icon>done</Icon>\r\n                            )}\r\n                            <div\r\n                              className={settings.themes[color].palette.type}\r\n                            ></div>\r\n                          </div>\r\n                        </Tooltip>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mb-4 mx-2\">\r\n                    <div className=\"text-muted mb-4\">Footer theme</div>\r\n                    <div className=\"flex flex-wrap m--2\">\r\n                      {topbarThemes.map((color, i) => (\r\n                        <Tooltip key={i} title={color} placement=\"top\">\r\n                          <div\r\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\r\n                            onClick={() => handleChange(\"footer.theme\", color)}\r\n                            style={{\r\n                              backgroundColor:\r\n                                themeColors[color].palette.primary.main,\r\n                            }}\r\n                          >\r\n                            {settings.footer.theme === color && (\r\n                              <Icon>done</Icon>\r\n                            )}\r\n                            <div\r\n                              className={settings.themes[color].palette.type}\r\n                            ></div>\r\n                          </div>\r\n                        </Tooltip>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Scrollbar>\r\n          </div>\r\n        </ThemeProvider>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst demoLayouts = [\r\n  {\r\n    name: \"Light Sidebar\",\r\n    thumbnail: \"/assets/images/screenshots/layout1-customizer.png\",\r\n    isPro: false,\r\n    options: {\r\n      activeLayout: \"layout1\",\r\n      activeTheme: \"blue\",\r\n      layout1Settings: {\r\n        leftSidebar: {\r\n          theme: \"whiteBlue\",\r\n          bgOpacity: 0.98,\r\n        },\r\n        topbar: {\r\n          theme: \"blueDark\",\r\n          fixed: true,\r\n        },\r\n      },\r\n      footer: {\r\n        theme: \"slateDark1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"Dark Sidebar\",\r\n    thumbnail: \"/assets/images/screenshots/layout1-blue-customizer.png\",\r\n    isPro: false,\r\n    options: {\r\n      activeLayout: \"layout1\",\r\n      activeTheme: \"blue\",\r\n      layout1Settings: {\r\n        leftSidebar: {\r\n          theme: \"slateDark1\",\r\n          bgOpacity: 0.92,\r\n        },\r\n        topbar: {\r\n          theme: \"blueDark\",\r\n          fixed: true,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"Dark Theme\",\r\n    thumbnail: \"/assets/images/screenshots/layout3-customizer.png\",\r\n    isPro: false,\r\n    options: {\r\n      activeLayout: \"layout1\",\r\n      activeTheme: \"purpleDark1\",\r\n      layout1Settings: {\r\n        leftSidebar: {\r\n          theme: \"slateDark1\",\r\n          bgOpacity: 0.92,\r\n        },\r\n        topbar: {\r\n          theme: \"purpleDark1\",\r\n          fixed: true,\r\n        },\r\n      },\r\n      footer: {\r\n        theme: \"slateDark1\",\r\n      },\r\n    },\r\n  },\r\n  {\r\n    name: \"Horizontal Navigation\",\r\n    thumbnail: \"/assets/images/screenshots/layout4-customizer.png\",\r\n    isPro: true,\r\n    options: {\r\n      activeLayout: \"layout2\",\r\n      activeTheme: \"purple1\",\r\n      layout2Settings: {\r\n        mode: \"full\",\r\n      },\r\n      footer: {\r\n        theme: \"slateDark1\",\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nexport default MatxCustomizer;\r\n","import React from \"react\";\r\nimport { IconButton, Icon } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MatxCustomizer from \"../MatxCustomizer/MatxCustomizer\";\r\nimport ShoppingCart from \"../ShoppingCart\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    width: (props) => props.width,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxShadow: theme.shadows[8],\r\n    backgroundColor: palette.primary.main,\r\n    zIndex: 98,\r\n    transition: \"all 0.15s ease\",\r\n  },\r\n  \"@global\": {\r\n    \"@media screen and (min-width: 767px)\": {\r\n      \".content-wrap, .layout2.layout-contained, .layout2.layout-full\": {\r\n        marginRight: (props) => props.width,\r\n      },\r\n      \".matx-customizer\": {\r\n        right: (props) => props.width,\r\n      },\r\n    },\r\n    \"@media screen and (max-width: 959px)\": {\r\n      \".toolbar-menu-wrap .menu-area\": {\r\n        width: (props) => `calc(100% - ${props.width})`,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SecondarySidebarContent = () => {\r\n  const classes = useStyles({ width: \"50px\" });\r\n\r\n  return (\r\n    <div className={clsx(\"secondary-sidebar\", classes.root)}>\r\n      <span className=\"m-auto\"></span>\r\n\r\n      <MatxCustomizer />\r\n\r\n      <ShoppingCart />\r\n\r\n      <Link to=\"/chat\">\r\n        <IconButton size=\"small\" aria-label=\"delete\" className=\"my-3\">\r\n          <Icon>comments</Icon>\r\n        </IconButton>\r\n      </Link>\r\n\r\n      <span className=\"m-auto\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebarContent;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default SecondarySidenavTheme\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SecondarySidebarToggle from \"./SecondarySidebarToggle\";\r\nimport SecondarySidebarContent from \"./SecondarySidebarContent\";\r\nimport SecondarySidenavTheme from \"../../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme\";\r\n\r\nconst SecondarySidebar = () => {\r\n  const { settings } = useSelector((state) => state.layout);\r\n  const secondarySidebarTheme =\r\n    settings.themes[settings.secondarySidebar.theme];\r\n\r\n  return (\r\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n      {settings.secondarySidebar.open && <SecondarySidebarContent />}\r\n      <SecondarySidebarToggle />\r\n    </SecondarySidenavTheme>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n\tbrand: {\r\n\t\tpadding: \"20px 18px 32px 24px\",\r\n\t},\r\n\thideOnCompact: {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n}));\r\n\r\nconst Brand = ({ children }) => {\r\n\tconst classes = useStyles();\r\n\tconst { settings } = useSelector((state) => state.layout);\r\n\tconst leftSidebar = settings.layout1Settings.leftSidebar;\r\n\tconst { mode } = leftSidebar;\r\n\treturn (\r\n\t\t<div className={clsx(\"flex items-center justify-between\", classes.brand)}>\r\n\t\t\t<div className=\"flex items-center hide-on-mobile\">\r\n\t\t\t\t{mode === \"full\" || (mode === \"close\" && mode === \"mobile\") ? (\r\n\t\t\t\t\t<img src=\"/assets/images/logos/logo-horizontal.png\" alt=\"alan office\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<img src=\"/assets/images/logos/logo-icon.png\" alt=\"alan office\" className=\"logo-icon\" />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"hide-on-pc mb-9\"></div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx({\r\n\t\t\t\t\tsidenavHoverShow: true,\r\n\t\t\t\t\t[classes.hideOnCompact]: mode === \"compact\",\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Brand;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport clsx from \"clsx\";\r\nimport { MatxVerticalNav } from \"matx\";\r\nimport React, { Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { navigations, navigations_bd } from \"../../navigations\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  scrollable: {\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n  },\r\n  sidenavMobileOverlay: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    width: \"100vw\",\r\n    background: \"transparent\",\r\n    zIndex: -1,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Sidenav = ({ role, children }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { settings } = useSelector((state) => state.layout);\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    dispatch(\r\n      setLayoutSettings({\r\n        ...settings,\r\n        [activeLayoutSettingsName]: {\r\n          ...activeLayoutSettings,\r\n          leftSidebar: {\r\n            ...activeLayoutSettings.leftSidebar,\r\n            ...sidebarSettings,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Scrollbar\r\n        options={{ suppressScrollX: true }}\r\n        className={clsx(\"relative px-4\", classes.scrollable)}\r\n      >\r\n        {children}\r\n        {/* <MatxVerticalNav navigation={navigations} /> */}\r\n        {role?.includes(\"6\") ? (\r\n          <MatxVerticalNav navigations={navigations_bd} />\r\n        ) : (\r\n          <MatxVerticalNav navigations={navigations} />\r\n        )}\r\n      </Scrollbar>\r\n\r\n      <div\r\n        onClick={() => updateSidebarMode({ mode: \"close\" })}\r\n        className={classes.sidenavMobileOverlay}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidenav;\r\n","import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { convertHexToRGB } from \"utils\";\r\n\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  sidenav: ({ width, primaryRGB, bgImgURL }) => ({\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100vh\",\r\n    width: width,\r\n    boxShadow: theme.shadows[8],\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"top\",\r\n    backgroundSize: \"cover\",\r\n    zIndex: 99,\r\n    overflow: \"hidden\",\r\n    color: palette.text.primary,\r\n    transition: \"all 250ms ease-in-out\",\r\n    backgroundImage: `linear-gradient(to bottom, rgba(${primaryRGB}, 1), rgba(${primaryRGB}, 1))`,\r\n    \"&:hover\": {\r\n      width: \"var(--sidenav-width)\",\r\n      \"& .sidenavHoverShow\": {\r\n        display: \"block\",\r\n      },\r\n      \"& .compactNavItem\": {\r\n        width: \"100%\",\r\n        maxWidth: \"100%\",\r\n        \"& .nav-bullet\": {\r\n          display: \"block\",\r\n        },\r\n        \"& .nav-bullet-text\": {\r\n          display: \"none\",\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  hideOnCompact: {\r\n    display: \"none\",\r\n  },\r\n  userInfo: {},\r\n}));\r\n\r\nconst Layout1Sidenav = () => {\r\n  const theme = useTheme();\r\n  const { settings } = useSelector((state) => state.layout);\r\n  const { role } = useSelector((state) => state.user);\r\n  console.log(\"ROLE\", role);\r\n  const leftSidebar = settings.layout1Settings.leftSidebar;\r\n  const { mode } = leftSidebar;\r\n\r\n  const getSidenavWidth = () => {\r\n    switch (mode) {\r\n      case \"compact\":\r\n        return \"var(--sidenav-compact-width)\";\r\n      default:\r\n        return \"var(--sidenav-width)\";\r\n    }\r\n  };\r\n\r\n  const primaryRGB = convertHexToRGB(theme.palette.primary.main);\r\n  const classes = useStyles({\r\n    ...leftSidebar,\r\n    width: getSidenavWidth(),\r\n    primaryRGB,\r\n  });\r\n\r\n  return (\r\n    <div className={classes.sidenav}>\r\n      <div className=\"flex-column relative h-full\">\r\n        <Brand />\r\n        <Sidenav role={role} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout1Sidenav;\r\n"],"sourceRoot":""}